{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Scraping Goodfirms.co's Software company details using Python\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![banner-image](https://i.imgur.com/kRKCXSo.png)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "!pip install jovian --upgrade --quiet"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import jovian"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "code_folding": []
   },
   "outputs": [
    {
     "data": {
      "application/javascript": [
       "window.require && require([\"base/js/namespace\"],function(Jupyter){Jupyter.notebook.save_checkpoint()})"
      ],
      "text/plain": [
       "<IPython.core.display.Javascript object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[jovian] Updating notebook \"tinliman21/scraping-goodfirms-website\" on https://jovian.com\u001b[0m\n",
      "[jovian] Committed successfully! https://jovian.com/tinliman21/scraping-goodfirms-website\u001b[0m\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "'https://jovian.com/tinliman21/scraping-goodfirms-website'"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Execute this to save new versions of the notebook\n",
    "jovian.commit(project= 'scraping-goodfirms-website')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "1. What is web scraping?\n",
    "\n",
    "    Web scraping, web harvesting, or web data extraction is data scraping used for extracting data from websites.[1] Web scraping software may directly access the World Wide Web using the Hypertext Transfer Protocol or a web browser. While web scraping can be done manually by a software user, the term typically refers to automated processes implemented using a bot or web crawler. It is a form of copying in which specific data is gathered and copied from the web, typically into a central local database or spreadsheet, for later retrieval or analysis."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![web_scraping_banner](https://i.imgur.com/0m8N0XI.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Why GOODFIRMS?\n",
    "\n",
    "GoodFirms is a treasury of the globe’s most prominent, efficient, and well-performing IT companies and software solutions.\n",
    "\n",
    "With its groundbreaking and foolproof research process, GoodFirms has been researching and reviewing companies & software products that could be of help to prospects. With an extensive stacked up list of researched and reviewed companies & software solutions altogether at one place, service finders are witnessing a noticeable reduction in their tasks with them being able to easily identify and pick the most appropriate firm to meet their requirements on the go!\n",
    "\n",
    "GoodFirms is offering a solid platform for companies and software vendors that want to sow seeds of reputation management just so to mark their hard-earned stature in the industry across the globe.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![](https://i.imgur.com/rOeRe7X.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "GoodFirms is a full-fledged research and review platform that helps software buyers and service seekers to opt for the best software or firm. At the same time, it helps IT companies and software vendors to boost user acquisition stats, market share and brand awareness. GoodFirms, just as the name suggests, is a dedicated community of “performing” IT companies as well as software solutions.\n",
    "\n",
    "We are well aware of the scenarios at both ends, wherein service seekers are struggling to find the best companies to meet a specific need and how leading software firms are making efforts to stand out from a clusters of inferior competitors.\n",
    "\n",
    "Hence, GoodFirms is at the forefront to help service buyers from around the world by providing a categorized directory, client reviews and company content & resources to help them choose the best firm/software product that meets their specific requirements. That said, GoodFirms also serves as an unequalled platform for performing IT companies and software to put their best foot forward. We follow an innovative research process that helps us to identify leading companies and software solutions that have been delivering groundbreaking results to their clients."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "For this project, I used :\n",
    "\n",
    "- import requests            # To extract the HTML document from the website\n",
    "- from bs4 BeautifulSoup     # To parse through the HTML document\n",
    "- import csv                 # To convert result into a csv file\n",
    "- import pandas as pd        # To put the data into a dataframe\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* BeautifulSoup library for handling the text extraction from the web page’s source code (HTML and CSS)\n",
    "\n",
    "from bs4 import BeautifulSoup\n",
    "\n",
    "doc= BeautifulSoup(requests.get(i).text)\n",
    "\n",
    "* Requests library for handling the interaction with the web page (Using HTTP requests)\n",
    "\n",
    "import requests\n",
    "\n",
    "* Install Pandas DataFrame to create a Library\n",
    "\n",
    "import pandas as pd\n",
    "\n",
    "* Create CVS file with the extracted information\n",
    "\n",
    "company_df.to_csv('4software_company.csv', index=None)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Purely Customer-rated Service and Software providers\n",
    "\n",
    "I picked Goodfirms.co to grab the top software companies that provide different type of services and softwares for the businesses and companies to improve their businesses.\n",
    "\n",
    "Type of Sotware that the website provide:\n",
    "\n",
    "* Accounting Software\n",
    "* Applicant Tracking Software\n",
    "* Business Intelligence Software\n",
    "* Digital Signage Software\n",
    "* ERP Software\n",
    "* Help Desk Software \n",
    "* Hospital Management Software\n",
    "* Library Automation Software \n",
    "* Order Management Software \n",
    "* Project Management Software                                     \n",
    "* School Management Software                                      \n",
    "* Warehouse Manaegment Software                                   \n",
    "* Applicant Tracking Software                                                       \n",
    "* Business Intelligence Software                                  \n",
    "* Digital Signage Software                                        \n",
    "* ERP Software                                                    \n",
    "* Hospital Management Software                                    \n",
    "* Live Chat Software                                             \n",
    "* POS Software                                                   \n",
    "* Reporting Software                                             \n",
    "* Shipping Software                                               \n",
    "* Website Builder Software                                        \n",
    "* AI Software                                                     \n",
    "* CRM Software                                                   \n",
    "* Document Management Software                                    \n",
    "* HR Software                                                     \n",
    "* Inventory Manaegment Software                                   \n",
    "* Marketing Automation Software  \n",
    "* SEO Software\n",
    "* E Commerce Software\n",
    "* Data Visualization Software\n",
    "* Help Desk Software\n",
    "* Library Automation Software\n",
    "* Billing and Invoicing Software\n",
    "* App Development Software\n",
    "* Order Management Software\n",
    "* Payroll Software \n",
    "* Project Management Software\n",
    "* School Management Software\n",
    "* Warehouse Manaegment Software\n",
    "* Text Editor Software\n",
    "* Live Chat Software\n",
    "* POS Software\n",
    "* Reporting Software\n",
    "* Shipping Software\n",
    "* Website Builder Software"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![](https://i.imgur.com/S9D03r6.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Project Outline\n",
    "\n",
    "Outline: Here are the steps that we follow:\n",
    "\n",
    "- First, going to scrape 'https://www.goodfirms.co/crm-software/'\n",
    "\n",
    "- Then, get a list of companies. For each company,  get the list of company name, company_info, focus, stars, company URL\n",
    "\n",
    "- For each service list, I'll get the top 25 companies from the webpage\n",
    "\n",
    "- For each company, I'll grab the software type, software description, webpage URL\n",
    "\n",
    "- For each company, I'll create a CSV file in the following format:\n",
    "\n",
    "```\n",
    "company name, company_info, focus, stars, company URL\n",
    "\n",
    "IBM Watsom, AI Software, AI Software, 4.2(4 reviews), https://www.goodfirms.co/software/ibm-watson/\n",
    "\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![final output](https://i.imgur.com/zdPuccW.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Use the requests library to download web pages"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- I need to Install requests library to grab the company url 'https://www.goodfirms.co/business-intelligence-software/'\n",
    "- The requests module allows you to send HTTP requests using Python. The HTTP request returns a Response Object with all the response data (content, encoding, status, etc).\n",
    "- I created page content to check and see the company url is working the way that it should or not.\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "!pip install requests --upgrade --quiet"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "import requests"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "urls= ['https://www.goodfirms.co/artificial-intelligence-software/','https://www.goodfirms.co/business-intelligence-software/','https://www.goodfirms.co/crm-software/','https://www.goodfirms.co/ecommerce-software/']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Use Beautiful Soup to parse and extract Information"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "   - import  requests\n",
    "   \n",
    "\n",
    "   - from bs4 import BeautifulSoup \n",
    "\n",
    "#We use requests.get to download the content from a webpage\n",
    "\n",
    "response = requests.get('https://www.goodfirms.co/')\n",
    "\n",
    "- I put it in the for loop to run through each and every company info::\n",
    "\n",
    "      for i in urls:\n",
    "      \n",
    "        doc= BeautifulSoup(requests.get(i).text)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Scrape the list of Software Type\n",
    "\n",
    "- First, I used web scraping package BeautifulSoup to fatch all the listing service softwares that are listed on the website.\n",
    "- I grabbed the a tags for the software titles and the description about the name of the software and also the direct link to that software companies page from the directory.\n",
    "- I created CSV file and then put all the information in the DataFrame to see how it look.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "!pip install BeautifulSoup4 --upgrade --quiet"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "from bs4 import BeautifulSoup"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![](https://i.imgur.com/eIyw39U.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**#We grab the company name and the information that we need from the a class in order to grab all the required tags!**\n",
    "\n",
    "**#Defining a function to grab the company_tags using BeautifulSoup(requests.get) function**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "code_folding": []
   },
   "outputs": [],
   "source": [
    "def scrape_company_info(doc):\n",
    "    \n",
    "    selection_class= 'c_name_head detail_page list-software-profile-visit'\n",
    "    company_tags= doc.find_all('a' ,{'class': selection_class})\n",
    "    company_info= []\n",
    "    for info in company_tags:\n",
    "        company_info.append(info.text)\n",
    "    return company_info"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "def scrape_company_desc(doc):\n",
    "    \n",
    "    div_selector= 'profile-tagline'\n",
    "    desc_tags= doc.find_all('p' ,{'class': div_selector})\n",
    "    company_profile= []\n",
    "    for desc in desc_tags:\n",
    "        company_profile.append(desc.text)\n",
    "    return company_profile"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "def scrape_company_stars(doc):\n",
    "    \n",
    "    star_selector= 'listinv_review_label'\n",
    "    star_tags= doc.find_all('span', {'class':star_selector})\n",
    "    company_stars= []\n",
    "    for star in star_tags:\n",
    "        company_stars.append(star.text)\n",
    "    return company_stars"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "def scrape_company_focus(doc):\n",
    "\n",
    "    focus_selector= 'firm-service-name'\n",
    "    focus_tags= doc.find_all('span', {'class' : focus_selector})\n",
    "    company_focus= []\n",
    "    for focus in focus_tags:\n",
    "        company_focus.append(focus.text)\n",
    "    return company_focus"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "code_folding": []
   },
   "outputs": [],
   "source": [
    "def scrape_company_urls(doc):\n",
    "\n",
    "    link_tags= doc.find_all('a', 'c_name_head detail_page list-software-profile-visit')\n",
    "    base_url= 'https://www.goodfirm.co'\n",
    "    company_url= []\n",
    "    for url in link_tags:\n",
    "        company_url.append(base_url + url['href'])\n",
    "    return company_url"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Now, it it time to put all the required information in a single line to put nicely in the dataframe.\n",
    "\n",
    "def get_company_info(urls):\n",
    "\n",
    "    company_dict={\n",
    "        'company_info': [], \n",
    "        'company_desc': [], \n",
    "        'focus': [], \n",
    "        'stars': [], \n",
    "        'company_url':[]\n",
    "    }\n",
    "\n",
    "    for url in urls:\n",
    "        doc= BeautifulSoup(requests.get(url).text)\n",
    "        company_dict['company_info'].extend(scrape_company_info(doc)),\n",
    "        company_dict['company_desc'].extend(scrape_company_desc(doc)),\n",
    "        company_dict['focus'].extend(scrape_company_focus(doc)),\n",
    "        company_dict['stars'].extend(scrape_company_stars(doc)),\n",
    "        company_dict['company_url'].extend(scrape_company_urls(doc))\n",
    "\n",
    "    return company_dict"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "company_details= get_company_info(urls)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Install pandas library to create a dataframe\n",
    "\n",
    "- Pandas is an very useful library to organize easily to display rows and columns.\n",
    "\n",
    "- Pandas is a data manipulation module. DataFrame let us store tabular data in Python.\n",
    "The DataFrame lets easily store and manipulate tabular data like rows and columns."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "!pip install pandas --quiet"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "company_df= pd.DataFrame(company_details)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>company_info</th>\n",
       "      <th>company_desc</th>\n",
       "      <th>focus</th>\n",
       "      <th>stars</th>\n",
       "      <th>company_url</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>IBM Watson</td>\n",
       "      <td>It is the best AI for the job.</td>\n",
       "      <td>Artificial Intelligence Software</td>\n",
       "      <td>4.2 (6 Reviews)</td>\n",
       "      <td>https://www.goodfirm.co/software/ibm-watson</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>BotStar</td>\n",
       "      <td>Engage Customers Online with Live Chat &amp; Chatbots</td>\n",
       "      <td>Artificial Intelligence Software</td>\n",
       "      <td>4.0 (3 Reviews)</td>\n",
       "      <td>https://www.goodfirm.co/software/botstar</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Deep Vision</td>\n",
       "      <td>Facial Recognition Software</td>\n",
       "      <td>Artificial Intelligence Software</td>\n",
       "      <td>4.5 (2 Reviews)</td>\n",
       "      <td>https://www.goodfirm.co/software/deep-vision</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Vertex AI</td>\n",
       "      <td>Build, deploy, and scale ML models faster, wit...</td>\n",
       "      <td>Artificial Intelligence Software</td>\n",
       "      <td>0.0 (0 Review)</td>\n",
       "      <td>https://www.goodfirm.co/software/vertex-ai</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Salesforce Einstein</td>\n",
       "      <td>Focus on what matters — the customer — with AI...</td>\n",
       "      <td>Artificial Intelligence Software</td>\n",
       "      <td>4.0 (1 Review)</td>\n",
       "      <td>https://www.goodfirm.co/software/salesforce-ei...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>119</th>\n",
       "      <td>Handshake</td>\n",
       "      <td>Become the company your customers love to orde...</td>\n",
       "      <td>E-Commerce Software</td>\n",
       "      <td>5.0 (1 Review)</td>\n",
       "      <td>https://www.goodfirm.co/software/handshake</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>120</th>\n",
       "      <td>PinnacleCart</td>\n",
       "      <td>Build the Perfect Store.</td>\n",
       "      <td>E-Commerce Software</td>\n",
       "      <td>5.0 (2 Reviews)</td>\n",
       "      <td>https://www.goodfirm.co/software/pinnaclecart</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>121</th>\n",
       "      <td>Spryker</td>\n",
       "      <td>The better e-commerce solution!</td>\n",
       "      <td>E-Commerce Software</td>\n",
       "      <td>5.0 (1 Review)</td>\n",
       "      <td>https://www.goodfirm.co/software/spryker</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>122</th>\n",
       "      <td>Sana Commerce</td>\n",
       "      <td>Prioritize relationships, not just transactions</td>\n",
       "      <td>E-Commerce Software</td>\n",
       "      <td>5.0 (1 Review)</td>\n",
       "      <td>https://www.goodfirm.co/software/sana-commerce</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>123</th>\n",
       "      <td>NuORDER</td>\n",
       "      <td>Two-Sided B2B eCommerce</td>\n",
       "      <td>E-Commerce Software</td>\n",
       "      <td>5.0 (1 Review)</td>\n",
       "      <td>https://www.goodfirm.co/software/nuorder</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>124 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            company_info                                       company_desc  \\\n",
       "0             IBM Watson                     It is the best AI for the job.   \n",
       "1                BotStar  Engage Customers Online with Live Chat & Chatbots   \n",
       "2            Deep Vision                        Facial Recognition Software   \n",
       "3              Vertex AI  Build, deploy, and scale ML models faster, wit...   \n",
       "4    Salesforce Einstein  Focus on what matters — the customer — with AI...   \n",
       "..                   ...                                                ...   \n",
       "119            Handshake  Become the company your customers love to orde...   \n",
       "120         PinnacleCart                           Build the Perfect Store.   \n",
       "121              Spryker                    The better e-commerce solution!   \n",
       "122        Sana Commerce    Prioritize relationships, not just transactions   \n",
       "123              NuORDER                            Two-Sided B2B eCommerce   \n",
       "\n",
       "                                focus            stars  \\\n",
       "0    Artificial Intelligence Software  4.2 (6 Reviews)   \n",
       "1    Artificial Intelligence Software  4.0 (3 Reviews)   \n",
       "2    Artificial Intelligence Software  4.5 (2 Reviews)   \n",
       "3    Artificial Intelligence Software   0.0 (0 Review)   \n",
       "4    Artificial Intelligence Software   4.0 (1 Review)   \n",
       "..                                ...              ...   \n",
       "119               E-Commerce Software   5.0 (1 Review)   \n",
       "120               E-Commerce Software  5.0 (2 Reviews)   \n",
       "121               E-Commerce Software   5.0 (1 Review)   \n",
       "122               E-Commerce Software   5.0 (1 Review)   \n",
       "123               E-Commerce Software   5.0 (1 Review)   \n",
       "\n",
       "                                           company_url  \n",
       "0          https://www.goodfirm.co/software/ibm-watson  \n",
       "1             https://www.goodfirm.co/software/botstar  \n",
       "2         https://www.goodfirm.co/software/deep-vision  \n",
       "3           https://www.goodfirm.co/software/vertex-ai  \n",
       "4    https://www.goodfirm.co/software/salesforce-ei...  \n",
       "..                                                 ...  \n",
       "119         https://www.goodfirm.co/software/handshake  \n",
       "120      https://www.goodfirm.co/software/pinnaclecart  \n",
       "121           https://www.goodfirm.co/software/spryker  \n",
       "122     https://www.goodfirm.co/software/sana-commerce  \n",
       "123           https://www.goodfirm.co/software/nuorder  \n",
       "\n",
       "[124 rows x 5 columns]"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "company_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/javascript": [
       "window.require && require([\"base/js/namespace\"],function(Jupyter){Jupyter.notebook.save_checkpoint()})"
      ],
      "text/plain": [
       "<IPython.core.display.Javascript object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[jovian] Updating notebook \"tinliman21/scraping-goodfirms-website\" on https://jovian.com\u001b[0m\n",
      "[jovian] Committed successfully! https://jovian.com/tinliman21/scraping-goodfirms-website\u001b[0m\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "'https://jovian.com/tinliman21/scraping-goodfirms-website'"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "jovian.commit()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Write a single function to:\n",
    "1. Get the list of info from the company page\n",
    "2. Get the list of top companies from the software page\n",
    "3. for each software, Create a CSV of the top companies "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Final Code"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "# try to grab all the company_tags from four different software companies information and put it in the company_dict.\n",
    "\n",
    "import pandas as pd\n",
    "\n",
    "def get_company_info(urls):\n",
    "\n",
    "    company_dict={\n",
    "        'company_info': [], \n",
    "        'company_desc': [], \n",
    "        'focus': [], \n",
    "        'stars': [], \n",
    "        'company_url':[]\n",
    "    }\n",
    "\n",
    "    for url in urls:\n",
    "        doc= BeautifulSoup(requests.get(url).text)\n",
    "        company_dict['company_info'].extend(scrape_company_info(doc)),\n",
    "        company_dict['company_desc'].extend(scrape_company_desc(doc)),\n",
    "        company_dict['focus'].extend(scrape_company_focus(doc)),\n",
    "        company_dict['stars'].extend(scrape_company_stars(doc)),\n",
    "        company_dict['company_url'].extend(scrape_company_urls(doc))\n",
    "\n",
    "    return company_dict"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Create CSV file(s) with the extracted information"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "company_df.to_csv('4software_company.csv', index=None)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![](https://i.imgur.com/i2wvU7e.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Summary"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* First grab all the required company information tags for Web Scraping for Software companies Project.\n",
    "\n",
    "\n",
    "* Scraped software companies listings from Goodfirms.co using Requests& BeautifulSoup4 • Builts functions such as (scrape_company_info(), get_company_info() to scrape company name, company info, focus, stars(reviews), company urls \n",
    "\n",
    "\n",
    "*  Put all the data in one dataframe using Pandas DataFrame to put all of the companies information into one big dataframe consisting 126 rows x 6 columns into 4software_company.csv"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Future Work"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- I definitely have to work on the following facts:\n",
    "\n",
    "\n",
    "- Improving the documentation part of the project.\n",
    "\n",
    "    \n",
    "- Define the main purpose of the project and the expected outcome of the project.\n",
    "\n",
    "\n",
    "- Define the boundaries of the project.\n",
    "\n",
    "\n",
    "- List assumptions regarding decisions outside of the project.\n",
    "\n",
    "\n",
    "- Identify what kind of processes impacted by the project.\n",
    "\n",
    "\n",
    "- Identify internal and external entities with which the project will interface."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Document and share your work"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**References**\n",
    "\n",
    "- https://www.goodfirms.co/\n",
    "\n",
    "\n",
    "- https://www.goodfirms.co/artificial-intelligence-software/\n",
    "\n",
    "\n",
    "- https://www.goodfirms.co/business-intelligence-software/\n",
    "\n",
    "\n",
    "- https://www.goodfirms.co/ecommerce-software/\n",
    "\n",
    "\n",
    "- https://www.goodfirms.co/crm-software/\n",
    "\n",
    "\n",
    "- https://realpython.com/beautiful-soup-web-scraper-python/\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "import jovian"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/javascript": [
       "window.require && require([\"base/js/namespace\"],function(Jupyter){Jupyter.notebook.save_checkpoint()})"
      ],
      "text/plain": [
       "<IPython.core.display.Javascript object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[jovian] Updating notebook \"tinliman21/4software-company-project\" on https://jovian.com\u001b[0m\n",
      "[jovian] Committed successfully! https://jovian.com/tinliman21/4software-company-project\u001b[0m\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "'https://jovian.com/tinliman21/4software-company-project'"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "jovian.commit(output= ['4software_company.csv'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/javascript": [
       "window.require && require([\"base/js/namespace\"],function(Jupyter){Jupyter.notebook.save_checkpoint()})"
      ],
      "text/plain": [
       "<IPython.core.display.Javascript object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "jovian.commit(project= 'scraping-goodfirms-website')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
